{"version":3,"sources":["actions/action-types.js","reducers/coupon-reducer.js","reducers/index.js","store.js","service.js","ecwidConfig.js","actions/coupon-actions.js","App.jsx","serviceWorker.js","index.js"],"names":["SET_APP_READY","GET_COUPONS_FROM_BASE","GET_INIT_COUPONS_FROM_BASE","SET_ACTIVE_COUPON","OPEN_COPY_MODAL","CLOSE_COPY_MODAL","GET_STORE_LANG","GET_CURRENCY","SHOW_PRINT","HIDE_PRINT","initialState","selectedCoupon","coupons","isCouponsLoaded","isCouponsLoading","print","aplication","ready","modal","show","storeLang","currency","couponReducer","state","arguments","length","undefined","action","type","types","Object","objectSpread","uniqCoupons","R","a","b","name","id","toConsumableArray","concat","payload","items","total","count","reducers","combineReducers","store","createStore","applyMiddleware","thunk","promiseMiddleware","document","createElement","EcwidApp","window","init","app_id","autoloadedflag","autoheight","storeData","getPayload","storeId","store_id","accessToken","access_token","App","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","data","getSoreLang","getCurency","react_default","React","Component","enhancedComponent","connect","response","i18n","changeLanguage","lang","dispatch","axios","then","value","formatsAndUnits","withNamespaces","Boolean","location","hostname","match","use","Backend","reactI18nextModule","fallbackLng","debug","backend","loadPath","interpolation","escapeValue","react","wait","CouponManager","es","src_App","ReactDOM","render","src_CouponManager","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.bd234ae0.chunk.js","sourcesContent":["export const SET_APP_READY = \"SET_APP_READY\";\n\nexport const GET_COUPONS_FROM_BASE = \"GET_COUPONS_FROM_BASE\";\nexport const GET_INIT_COUPONS_FROM_BASE = \"GET_INIT_COUPONS_FROM_BASE\";\nexport const SET_ACTIVE_COUPON = \"SET_ACTIVE_COUPON\";\n\nexport const OPEN_COPY_MODAL = \"OPEN_COPY_MODAL\";\nexport const CLOSE_COPY_MODAL = \"CLOSE_COPY_MODAL\";\n\nexport const GET_STORE_LANG = \"GET_STORE_LANG\";\nexport const GET_CURRENCY = \"GET_CURRENCY\";\n\nexport const SHOW_PRINT = \"SHOW_PRINT\";\nexport const HIDE_PRINT = \"HIDE_PRINT\";\n","import * as types from \"../actions/action-types\";\nimport * as R from \"ramda\";\n\nconst initialState = {\n  selectedCoupon: \"\",\n  coupons: [],\n  isCouponsLoaded: true,\n  isCouponsLoading: false,\n  print: false,\n  aplication: {\n    ready: false\n  },\n  modal: {\n    show: false\n  },\n  storeLang: \"\",\n  currency: \"\"\n};\n\nconst couponReducer = function(state = initialState, action) {\n  switch (action.type) {\n    case types.GET_INIT_COUPONS_FROM_BASE:\n      return { ...state, isCouponsLoading: true };\n    case types.GET_COUPONS_FROM_BASE:\n      const uniqCoupons = R.uniqWith(\n        (a, b) => {\n          return a.name === b.name && a.id === b.id;\n        },\n        [...state.coupons, ...action.payload.items]\n      );\n      // debugger; //eslint-disable-line\n      return {\n        ...state,\n        coupons: uniqCoupons,\n        isCouponsLoaded:\n          action.payload.total ===\n            [...state.coupons, ...action.payload.items].length ||\n          action.payload.count === 0,\n        isCouponsLoading: false,\n        total: action.payload.total\n      };\n\n    case types.OPEN_COPY_MODAL:\n      return { ...state, modal: { show: action.payload } };\n\n    case types.CLOSE_COPY_MODAL:\n      return { ...state, modal: { show: action.payload } };\n\n    case types.SET_APP_READY:\n      return { ...state, aplication: { ready: action.payload } };\n\n    case types.SET_ACTIVE_COUPON:\n      return { ...state, selectedCoupon: action.payload };\n    case types.GET_STORE_LANG:\n      return { ...state, storeLang: action.payload };\n    case types.SHOW_PRINT:\n      return { ...state, print: true };\n    case types.HIDE_PRINT:\n      return { ...state, print: false };\n\n    default:\n      return state;\n  }\n};\n\nexport default couponReducer;\n","import { combineReducers } from \"redux\";\n// Reducers\nimport couponReducer from \"./coupon-reducer\";\n// Combine Reducers\nvar reducers = combineReducers({\n  couponReducer\n});\nexport default reducers;\n","import { createStore, applyMiddleware } from \"redux\";\n// import { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers/index.js\";\nimport promiseMiddleware from \"redux-promise\";\n\n// const logger = createLogger();\n\nconst deVstore = createStore(\n  reducers,\n  applyMiddleware(thunk, promiseMiddleware)\n);\nconst prodStore = createStore(\n  reducers,\n  applyMiddleware(thunk, promiseMiddleware)\n);\n\nconst store = process.env.NODE_ENV === \"production\" ? prodStore : deVstore;\n\nexport default store;\n","import _ from \"lodash\";\nimport tableify from \"tableify\";\n\nexport function bindMethods(component, names) {\n  if (_.isString(names)) {\n    names = [names];\n  }\n  names.forEach(name => (component[name] = component[name].bind(component)));\n}\n\nexport function exportToCsv(filename, rows) {\n  var processRow = function(row) {\n    var finalVal = \"\";\n    for (var j = 0; j < row.length; j++) {\n      var innerValue = row[j] === null ? \"\" : row[j].toString();\n      if (row[j] instanceof Date) {\n        innerValue = row[j].toLocaleString();\n      }\n      var result = innerValue.replace(/\"/g, '\"\"');\n      if (result.search(/(\"|,|\\n)/g) >= 0) result = '\"' + result + '\"';\n      if (j > 0) finalVal += \",\";\n      finalVal += result;\n    }\n    return finalVal + \"\\n\";\n  };\n\n  var csvFile = \"\";\n  console.log(rows);\n  for (var i = 0; i < rows.length; i++) {\n    csvFile += processRow(rows[i]);\n  }\n\n  var blob = new Blob([csvFile], { type: \"text/csv;charset=utf-8;\" });\n  if (navigator.msSaveBlob) {\n    // IE 10+\n    navigator.msSaveBlob(blob, filename);\n  } else {\n    var link = document.createElement(\"a\");\n    if (link.download !== undefined) {\n      // feature detection\n      // Browsers that support HTML5 download attribute\n      debugger; //eslint-disable-line\n      var url = URL.createObjectURL(blob);\n      link.setAttribute(\"href\", url);\n      link.setAttribute(\"download\", filename);\n      link.style.visibility = \"hidden\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  }\n}\nexport function JSONToCSVConvertor(JSONData, ReportTitle, ShowLabel) {\n  //If JSONData is not an object then JSON.parse will parse the JSON string in an Object\n  var arrData = typeof JSONData != \"object\" ? JSON.parse(JSONData) : JSONData;\n  var CSV = \"\";\n  //Set Report title in first row or line\n\n  CSV += ReportTitle + \"\\r\\n\\n\";\n\n  //This condition will generate the Label/Header\n  if (ShowLabel) {\n    var row = \"\";\n\n    //This loop will extract the label from 1st index of on array\n    for (var index in arrData[0]) {\n      //Now convert each value to string and comma-seprated\n      row += index + \",\";\n    }\n\n    row = row.slice(0, -1);\n\n    //append Label row with line break\n    CSV += row + \"\\r\\n\";\n  }\n\n  //1st loop is to extract each row\n  for (var i = 0; i < arrData.length; i++) {\n    var row = \"\";\n\n    //2nd loop will extract each column and convert it in string comma-seprated\n    for (var index in arrData[i]) {\n      row += arrData[i][index] + \",\";\n    }\n\n    row.slice(0, row.length - 1);\n\n    //add a line break after each row\n    CSV += row + \"\\r\\n\";\n  }\n\n  if (CSV == \"\") {\n    alert(\"Invalid data\");\n    return;\n  }\n  return CSV;\n  //Generate a file name\n  var fileName = \"ECWID_COUPONS_\";\n  //this will remove the blank-spaces from the title and replace it with an underscore\n  fileName += ReportTitle.replace(/ /g, \"_\");\n\n  //Initialize file format you want csv or xls\n  var uri = \"data:text/csv;charset=utf-8,\" + CSV;\n  var uri2 = \"data:text/json;charset=utf-8,\" + JSON.stringify(JSONData);\n\n  // Now the little tricky part.\n  // you can use either>> window.open(uri);\n  // but this will not work in some browsers\n  // or you will not get the correct file extension\n\n  //this trick will generate a temp <a /> tag\n  var link = document.createElement(\"a\");\n  link.href = uri2;\n\n  //set the visibility hidden so it will not effect on your web-layout\n  link.style = \"visibility:hidden\";\n  link.download = fileName + \".json\";\n\n  //this part will append the anchor tag and remove it after automatic click\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n  var url =\n    \"data:text/json;charset=utf8,\" +\n    encodeURIComponent(JSON.stringify(JSONData));\n  window.open(url, \"_blank\");\n  window.focus();\n}\n\nvar _table_ = document.createElement(\"table\"),\n  _tr_ = document.createElement(\"tr\"),\n  _th_ = document.createElement(\"th\"),\n  _td_ = document.createElement(\"td\");\n\n// Builds the HTML Table out of myList json data from Ivy restful service.\nfunction buildHtmlTable(arr) {\n  var table = _table_.cloneNode(false),\n    columns = addAllColumnHeaders(arr, table);\n  for (var i = 0, maxi = arr.length; i < maxi; ++i) {\n    var tr = _tr_.cloneNode(false);\n    for (var j = 0, maxj = columns.length; j < maxj; ++j) {\n      var td = _td_.cloneNode(false);\n      td.appendChild(document.createTextNode(arr[i][columns[j]] || \"\"));\n      tr.appendChild(td);\n    }\n    table.appendChild(tr);\n  }\n  return table;\n}\n\n// Adds a header row to the table and returns the set of columns.\n// Need to do union of keys from all records as some records may not contain\n// all records\nfunction addAllColumnHeaders(arr, table) {\n  var columnSet = [],\n    tr = _tr_.cloneNode(false);\n  for (var i = 0, l = arr.length; i < l; i++) {\n    for (var key in arr[i]) {\n      if (arr[i].hasOwnProperty(key) && columnSet.indexOf(key) === -1) {\n        columnSet.push(key);\n        var th = _th_.cloneNode(false);\n        th.appendChild(document.createTextNode(key));\n        tr.appendChild(th);\n      }\n    }\n  }\n  table.appendChild(tr);\n  return columnSet;\n}\n\nexport function openDataPage(json, title) {\n  const container = function(title, data) {\n    return `<div>\n        <h1>${title}</h1>\n          <div style=\"padding: 20px;\n                      background: rgba(0,0,0,.1);\n                      border-radius: 8px;\n                      margin-bottom: 40px;\"\n          >\n            ${data}\n          </div>\n      </div>\n      `;\n  };\n  const _JSON_ = container(`JSON: ${title}`, JSON.stringify(json));\n  const _CSV_ = container(`CSV: ${title}`, JSONToCSVConvertor(json, title));\n  const _TABLE_ = container(`TABLE: ${title}`, tableify(json));\n\n  const html = `<html>\n      <head>\n        <style>\n          table{\n            border-collapse: collapse;\n          }\n          td,th{\n            border: 1px solid gray;\n            padding: 5px;\n          }\n        </style>\n      </head>\n      <body>\n        ${_JSON_}\n        ${_CSV_}\n        ${_TABLE_}\n      </body>\n    </html>`;\n\n  var uri = \"data:text/html;charset=utf8,\" + encodeURIComponent(html);\n  var newWindow = window.open(uri);\n}\n","const EcwidApp = window.EcwidApp;\n// Initialize the application\nEcwidApp.init({\n  // app_id: \"coupon-generator\", // use your application namespace\n  app_id: \"multiple-coupons-dev\", // for dev\n  autoloadedflag: true,\n  autoheight: true\n});\n\n\nconst storeData = EcwidApp.getPayload();\nexport const storeId = storeData.store_id;\nexport const accessToken = storeData.access_token;","import * as types from \"../actions/action-types\";\nimport axios from \"axios\";\nimport { storeId, accessToken } from \"../ecwidConfig\";\nimport i18n from \"i18next\";\nconst devHash =\n  \"#7b2273746f72655f6964223a353533363031372c226163636573735f746f6b656e223a223446317a644c74486a716231616569616262726b786a5458396b444e42547242222c226c616e67223a227275227d\";\n\nconst EcwidApp = window.EcwidApp;\n\nexport function getCouponsFromBase(offset = 0) {\n  return dispatch => {\n    dispatch({\n      type: types.GET_INIT_COUPONS_FROM_BASE\n    });\n    axios\n      .get(\n        `https://app.ecwid.com/api/v3/${storeId}/discount_coupons?token=${accessToken}&offset=${offset}`\n      )\n      .then(response => {\n        dispatch({\n          type: types.GET_COUPONS_FROM_BASE,\n          payload: response.data\n        });\n      });\n  };\n}\n\nexport function getSoreLang() {\n  const response = EcwidApp.getPayload();\n  i18n.changeLanguage(response.lang);\n  return {\n    type: types.GET_STORE_LANG,\n    payload: response.lang\n  };\n}\nexport function getCurency() {\n  return dispatch =>\n    axios(\n      `https://app.ecwid.com/api/v3/${storeId}/profile?token=${accessToken}`\n    ).then(value => {\n      return dispatch({\n        type: types.GET_CURRENCY,\n        payload: value.data.formatsAndUnits.currency\n      });\n    });\n}\n\nexport function generateCoupons(amount, pattern) {\n  return function(dispatch) {\n    axios\n      .post(\n        `https://app.ecwid.com/api/v3/${storeId}/discount_coupons?token=${accessToken}`,\n        {}\n      )\n      .then(response => {\n        dispatch({\n          type: types.GET_COUPONS_FROM_BASE,\n          payload: response\n        });\n      });\n  };\n}\n\nexport function openCopyModal() {\n  return {\n    type: types.OPEN_COPY_MODAL,\n    payload: true\n  };\n}\nexport function setActiveCoupon(obj) {\n  return {\n    type: types.SET_ACTIVE_COUPON,\n    payload: obj\n  };\n}\nexport function closeCopyModal() {\n  return {\n    type: types.CLOSE_COPY_MODAL,\n    payload: false\n  };\n}\n\nexport function setAppReady() {\n  return {\n    type: types.SET_APP_READY,\n    payload: true\n  };\n}\n\nexport function showPrint() {\n  return {\n    type: types.SHOW_PRINT\n  };\n}\n\nexport function hidePrint() {\n  return {\n    type: types.HIDE_PRINT\n  };\n}\n","import React, { Fragment } from \"react\";\n// import s from \"./styles/CouponManager/CouponManager.scss\";\nimport { bindMethods } from \"./service\";\nimport * as R from \"ramda\";\n// import Aside from \"./aside.jsx\";\n// import Main from \"./main.jsx\";\n// import CopyModal from \"./copyModal.jsx\";\nimport { getSoreLang, getCurency } from \"./actions/coupon-actions.js\";\nimport { connect } from \"react-redux\";\n// import { Layout } from \"antd\";\n// import Print from \"./print\";\n\n// import \"./App.sass\";\nimport { Trans, withNamespaces } from \"react-i18next\";\n\n// const { Header, Footer, Sider, Content } = Layout;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: \"\"\n    };\n  }\n  componentDidMount() {\n    this.props.getSoreLang();\n    this.props.getCurency();\n  }\n\n  // renderContent() {\n  //   const { print } = this.props;\n  //   if (print) {\n  //     return <Print />;\n  //   }\n  //   return (\n  //     <Fragment>\n  //       <Content className=\"container\">\n  //         <h1>\n  //           <Trans i18nKey=\"title\" />\n  //         </h1>\n  //         <div style={{ background: \"#fff\", padding: 24, minHeight: 380 }}>\n  //           <Main />\n  //         </div>\n  //       </Content>\n  //       <Sider theme=\"light\">\n  //         <Aside />\n  //         <CopyModal />\n  //       </Sider>\n  //     </Fragment>\n  //   );\n  // }\n  render() {\n    return <h1>TEST</h1>;\n    // return (\n    //   <Layout style={{ minHeight: \"100vh\" }}>{this.renderContent()}</Layout>\n    // );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    storeLang: state.couponReducer.storeLang,\n    print: state.couponReducer.print\n  };\n}\n\nconst enhancedComponent = R.pipe(\n  connect(\n    mapStateToProps,\n    { getSoreLang, getCurency }\n  ),\n  withNamespaces(\"translation\")\n);\n\nexport default enhancedComponent(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider, connect } from \"react-redux\";\nimport store from \"./store\";\nimport App from \"./App.jsx\";\nimport Test from \"./Test\";\nimport \"./ecwidConfig\";\nimport * as serviceWorker from \"./serviceWorker\";\nimport i18n from \"i18next\";\nimport { withI18n, reactI18nextModule } from \"react-i18next\";\nimport Backend from \"i18next-xhr-backend\";\n\ni18n\n  .use(Backend)\n  .use(reactI18nextModule)\n  .init({\n    fallbackLng: \"en\",\n    debug: true,\n    backend: {\n      loadPath: `locales/{{lng}}/{{ns}}.json`\n    },\n    interpolation: {\n      escapeValue: false // not needed for react as it escapes by default\n    },\n    react: {\n      wait: true\n    }\n  });\n\nclass CouponManager extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <Provider store={store}>\n        <App />\n      </Provider>\n    );\n  }\n}\nReactDOM.render(<CouponManager />, document.getElementById(\"root\"));\n\n// // If you want your app to work offline and load faster, you can change\n// // unregister() to register() below. Note this comes with some pitfalls.\n// // Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}