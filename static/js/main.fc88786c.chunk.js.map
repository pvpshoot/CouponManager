{"version":3,"sources":["actions/action-types.js","reducers/coupon-reducer.js","reducers/index.js","store.js","service.js","ecwidConfig.js","actions/coupon-actions.js","aside.jsx","CopyButton.jsx","main.jsx","copyModal.jsx","App.jsx","serviceWorker.js","index.js"],"names":["SET_APP_READY","GET_COUPONS_FROM_BASE","GET_INIT_COUPONS_FROM_BASE","SET_ACTIVE_COUPON","OPEN_COPY_MODAL","CLOSE_COPY_MODAL","GET_STORE_LANG","GET_CURRENCY","initialState","selectedCoupon","coupons","isCouponsLoaded","isCouponsLoading","aplication","ready","modal","show","storeLang","currency","couponReducer","state","arguments","length","undefined","action","type","types","Object","objectSpread","uniqCoupons","R","a","b","name","id","toConsumableArray","concat","payload","items","total","count","reducers","combineReducers","logger","createLogger","store","createStore","applyMiddleware","thunk","promiseMiddleware","bindMethods","component","names","_","isString","forEach","bind","document","createElement","openDataPage","json","title","container","data","_JSON_","JSON","stringify","_CSV_","JSONData","ReportTitle","ShowLabel","arrData","parse","CSV","row","index","slice","i","alert","JSONToCSVConvertor","_TABLE_","tableify","html","uri","encodeURIComponent","window","open","EcwidApp","init","app_id","autoloadedflag","autoheight","storeData","getPayload","storeId","store_id","accessToken","access_token","getCouponsFromBase","offset","dispatch","axios","get","then","response","openCopyModal","setActiveCoupon","obj","Aside","props","_this","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","downloadCsv","getActiveSetCoupons","fields","key","hasOwnProperty","push","result","Parser","match","encodeURI","link","setAttribute","click","err","console","error","lang","assertThisInitialized","setState","_this2","selectedCoupons","el","item","en","copy","print","ru","react_default","className","s","style","paddingTop","padding","background","getTranslate","es_button","onClick","openModal","disabled","printCoupons","React","Component","connect","CopyButton","coupon","children","defaultProps","KEYS_TO_FILTERS","Search","Input","Main","columns","dataIndex","render","text","record","expirationDate","moment","format","_ref","status","mapCouponStatus","src_CopyButton","throttle","running","addEventListener","requestAnimationFrame","dispatchEvent","CustomEvent","makeCoupons","couponsArray","isObject","search","couponsForTable","k","c","includes","discountType","rowSelection","selectedRowKeys","onChange","selectedRows","table","rowKey","r","scroll","x","loading","dataSource","size","expandedRowRender","map","tag","color","code","pagination","defaultPageSize","onRow","renderProgress","_this$props","progress","percent","Math","floor","searchTerm","setAppReady","couponGroupObj","sort","d1","Date","updateDate","term","filteredCoupons","filter","createFilter","placeholder","getSearchPlaceholder","onSearch","e","target","value","width","chance","Chance","CopyModal","copyConfig","amount","prefix","random","valid","closeCopyModal","event","abs","hash","promises","getRandomCode","post","notification","info","message","duration","all","success","setTimeout","location","reload","closeModal","catch","button","formItemLayout","labelCol","xs","span","sm","wrapperCol","visible","onCancel","footer","mainPopup","mainPopup_center","mainPopup__container","mainPopup__title","es_form","Item","assign","label","es_checkbox","checked","handleChangeRandom","input","handleChangeprefix","handleChangeNumber","max","mainPopup__buttons","submitGenerator","generateCoupons","pattern","Sider","Layout","Header","Footer","Content","App","getSoreLang","getCurency","layout","minHeight","main","theme","aside","copyModal","formatsAndUnits","Boolean","hostname","CouponManager","es","src_App_0","ReactDOM","src_CouponManager","getElementById","navigator","serviceWorker","registration","unregister"],"mappings":"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","file":"static/js/main.fc88786c.chunk.js","sourcesContent":["export const SET_APP_READY = \"SET_APP_READY\";\n\nexport const GET_COUPONS_FROM_BASE = \"GET_COUPONS_FROM_BASE\";\nexport const GET_INIT_COUPONS_FROM_BASE = \"GET_INIT_COUPONS_FROM_BASE\";\nexport const SET_ACTIVE_COUPON = \"SET_ACTIVE_COUPON\";\n\nexport const OPEN_COPY_MODAL = \"OPEN_COPY_MODAL\";\nexport const CLOSE_COPY_MODAL = \"CLOSE_COPY_MODAL\";\n\nexport const GET_STORE_LANG = \"GET_STORE_LANG\";\nexport const GET_CURRENCY = \"GET_CURRENCY\";\n","import * as types from \"../actions/action-types\";\nimport * as R from \"ramda\";\n\nconst initialState = {\n  selectedCoupon: \"\",\n  coupons: [],\n  isCouponsLoaded: true,\n  isCouponsLoading: false,\n  aplication: {\n    ready: false\n  },\n  modal: {\n    show: false\n  },\n  storeLang: \"\",\n  currency: \"\"\n};\n\nconst couponReducer = function(state = initialState, action) {\n  switch (action.type) {\n    case types.GET_INIT_COUPONS_FROM_BASE:\n      return { ...state, isCouponsLoading: true };\n    case types.GET_COUPONS_FROM_BASE:\n      const uniqCoupons = R.uniqWith(\n        (a, b) => {\n          return a.name === b.name && a.id === b.id;\n        },\n        [...state.coupons, ...action.payload.items]\n      );\n      // debugger; //eslint-disable-line\n      return {\n        ...state,\n        coupons: uniqCoupons,\n        isCouponsLoaded:\n          action.payload.total ===\n            [...state.coupons, ...action.payload.items].length ||\n          action.payload.count === 0,\n        isCouponsLoading: false,\n        total: action.payload.total\n      };\n\n    case types.OPEN_COPY_MODAL:\n      return { ...state, modal: { show: action.payload } };\n\n    case types.CLOSE_COPY_MODAL:\n      return { ...state, modal: { show: action.payload } };\n\n    case types.SET_APP_READY:\n      return { ...state, aplication: { ready: action.payload } };\n\n    case types.SET_ACTIVE_COUPON:\n      return { ...state, selectedCoupon: action.payload };\n    case types.GET_STORE_LANG:\n      return { ...state, storeLang: action.payload };\n\n    default:\n      return state;\n  }\n};\n\nexport default couponReducer;\n","import { combineReducers } from \"redux\";\n// Reducers\nimport couponReducer from \"./coupon-reducer\";\n// Combine Reducers\nvar reducers = combineReducers({\n  couponReducer\n});\nexport default reducers;\n","import { createStore, applyMiddleware } from \"redux\";\nimport { createLogger } from \"redux-logger\";\nimport thunk from \"redux-thunk\";\nimport reducers from \"./reducers/index.js\";\nimport promiseMiddleware from \"redux-promise\";\n\nconst logger = createLogger();\n\nconst deVstore = createStore(\n  reducers,\n  applyMiddleware(logger, thunk, promiseMiddleware)\n);\nconst prodStore = createStore(\n  reducers,\n  applyMiddleware(thunk, promiseMiddleware)\n);\n\nconst store = process.env.NODE_ENV === \"production\" ? prodStore : deVstore;\n\nexport default store;\n","import _ from \"lodash\";\nimport tableify from \"tableify\";\n\nexport function bindMethods(component, names) {\n  if (_.isString(names)) {\n    names = [names];\n  }\n  names.forEach(name => (component[name] = component[name].bind(component)));\n}\n\nexport function exportToCsv(filename, rows) {\n  var processRow = function(row) {\n    var finalVal = \"\";\n    for (var j = 0; j < row.length; j++) {\n      var innerValue = row[j] === null ? \"\" : row[j].toString();\n      if (row[j] instanceof Date) {\n        innerValue = row[j].toLocaleString();\n      }\n      var result = innerValue.replace(/\"/g, '\"\"');\n      if (result.search(/(\"|,|\\n)/g) >= 0) result = '\"' + result + '\"';\n      if (j > 0) finalVal += \",\";\n      finalVal += result;\n    }\n    return finalVal + \"\\n\";\n  };\n\n  var csvFile = \"\";\n  console.log(rows);\n  for (var i = 0; i < rows.length; i++) {\n    csvFile += processRow(rows[i]);\n  }\n\n  var blob = new Blob([csvFile], { type: \"text/csv;charset=utf-8;\" });\n  if (navigator.msSaveBlob) {\n    // IE 10+\n    navigator.msSaveBlob(blob, filename);\n  } else {\n    var link = document.createElement(\"a\");\n    if (link.download !== undefined) {\n      // feature detection\n      // Browsers that support HTML5 download attribute\n      debugger; //eslint-disable-line\n      var url = URL.createObjectURL(blob);\n      link.setAttribute(\"href\", url);\n      link.setAttribute(\"download\", filename);\n      link.style.visibility = \"hidden\";\n      document.body.appendChild(link);\n      link.click();\n      document.body.removeChild(link);\n    }\n  }\n}\nexport function JSONToCSVConvertor(JSONData, ReportTitle, ShowLabel) {\n  //If JSONData is not an object then JSON.parse will parse the JSON string in an Object\n  var arrData = typeof JSONData != \"object\" ? JSON.parse(JSONData) : JSONData;\n  var CSV = \"\";\n  //Set Report title in first row or line\n\n  CSV += ReportTitle + \"\\r\\n\\n\";\n\n  //This condition will generate the Label/Header\n  if (ShowLabel) {\n    var row = \"\";\n\n    //This loop will extract the label from 1st index of on array\n    for (var index in arrData[0]) {\n      //Now convert each value to string and comma-seprated\n      row += index + \",\";\n    }\n\n    row = row.slice(0, -1);\n\n    //append Label row with line break\n    CSV += row + \"\\r\\n\";\n  }\n\n  //1st loop is to extract each row\n  for (var i = 0; i < arrData.length; i++) {\n    var row = \"\";\n\n    //2nd loop will extract each column and convert it in string comma-seprated\n    for (var index in arrData[i]) {\n      row += arrData[i][index] + \",\";\n    }\n\n    row.slice(0, row.length - 1);\n\n    //add a line break after each row\n    CSV += row + \"\\r\\n\";\n  }\n\n  if (CSV == \"\") {\n    alert(\"Invalid data\");\n    return;\n  }\n  return CSV;\n  //Generate a file name\n  var fileName = \"ECWID_COUPONS_\";\n  //this will remove the blank-spaces from the title and replace it with an underscore\n  fileName += ReportTitle.replace(/ /g, \"_\");\n\n  //Initialize file format you want csv or xls\n  var uri = \"data:text/csv;charset=utf-8,\" + CSV;\n  var uri2 = \"data:text/json;charset=utf-8,\" + JSON.stringify(JSONData);\n\n  // Now the little tricky part.\n  // you can use either>> window.open(uri);\n  // but this will not work in some browsers\n  // or you will not get the correct file extension\n\n  //this trick will generate a temp <a /> tag\n  var link = document.createElement(\"a\");\n  link.href = uri2;\n\n  //set the visibility hidden so it will not effect on your web-layout\n  link.style = \"visibility:hidden\";\n  link.download = fileName + \".json\";\n\n  //this part will append the anchor tag and remove it after automatic click\n  document.body.appendChild(link);\n  link.click();\n  document.body.removeChild(link);\n  var url =\n    \"data:text/json;charset=utf8,\" +\n    encodeURIComponent(JSON.stringify(JSONData));\n  window.open(url, \"_blank\");\n  window.focus();\n}\n\nvar _table_ = document.createElement(\"table\"),\n  _tr_ = document.createElement(\"tr\"),\n  _th_ = document.createElement(\"th\"),\n  _td_ = document.createElement(\"td\");\n\n// Builds the HTML Table out of myList json data from Ivy restful service.\nfunction buildHtmlTable(arr) {\n  var table = _table_.cloneNode(false),\n    columns = addAllColumnHeaders(arr, table);\n  for (var i = 0, maxi = arr.length; i < maxi; ++i) {\n    var tr = _tr_.cloneNode(false);\n    for (var j = 0, maxj = columns.length; j < maxj; ++j) {\n      var td = _td_.cloneNode(false);\n      td.appendChild(document.createTextNode(arr[i][columns[j]] || \"\"));\n      tr.appendChild(td);\n    }\n    table.appendChild(tr);\n  }\n  return table;\n}\n\n// Adds a header row to the table and returns the set of columns.\n// Need to do union of keys from all records as some records may not contain\n// all records\nfunction addAllColumnHeaders(arr, table) {\n  var columnSet = [],\n    tr = _tr_.cloneNode(false);\n  for (var i = 0, l = arr.length; i < l; i++) {\n    for (var key in arr[i]) {\n      if (arr[i].hasOwnProperty(key) && columnSet.indexOf(key) === -1) {\n        columnSet.push(key);\n        var th = _th_.cloneNode(false);\n        th.appendChild(document.createTextNode(key));\n        tr.appendChild(th);\n      }\n    }\n  }\n  table.appendChild(tr);\n  return columnSet;\n}\n\nexport function openDataPage(json, title) {\n  const container = function(title, data) {\n    return `<div>\n        <h1>${title}</h1>\n          <div style=\"padding: 20px;\n                      background: rgba(0,0,0,.1);\n                      border-radius: 8px;\n                      margin-bottom: 40px;\"\n          >\n            ${data}\n          </div>\n      </div>\n      `;\n  };\n  const _JSON_ = container(`JSON: ${title}`, JSON.stringify(json));\n  const _CSV_ = container(`CSV: ${title}`, JSONToCSVConvertor(json, title));\n  const _TABLE_ = container(`TABLE: ${title}`, tableify(json));\n\n  const html = `<html>\n      <head>\n        <style>\n          table{\n            border-collapse: collapse;\n          }\n          td,th{\n            border: 1px solid gray;\n            padding: 5px;\n          }\n        </style>\n      </head>\n      <body>\n        ${_JSON_}\n        ${_CSV_}\n        ${_TABLE_}\n      </body>\n    </html>`;\n\n  var uri = \"data:text/html;charset=utf8,\" + encodeURIComponent(html);\n  var newWindow = window.open(uri);\n}\n","const EcwidApp = window.EcwidApp;\n// Initialize the application\nEcwidApp.init({\n  app_id: \"coupon-generator\", // use your application namespace\n  autoloadedflag: true,\n  autoheight: true\n});\nconst storeData = EcwidApp.getPayload();\nexport const storeId = storeData.store_id;\nexport const accessToken = storeData.access_token;\n","import * as types from \"../actions/action-types\";\nimport axios from \"axios\";\nimport { storeId, accessToken } from \"../ecwidConfig\";\nconst devHash =\n  \"#7b2273746f72655f6964223a353533363031372c226163636573735f746f6b656e223a223446317a644c74486a716231616569616262726b786a5458396b444e42547242222c226c616e67223a227275227d\";\n\nconst EcwidApp = window.EcwidApp;\n\nexport function getCouponsFromBase(offset = 0) {\n  return dispatch => {\n    dispatch({\n      type: types.GET_INIT_COUPONS_FROM_BASE\n    });\n    axios\n      .get(\n        `https://app.ecwid.com/api/v3/${storeId}/discount_coupons?token=${accessToken}&offset=${offset}`\n      )\n      .then(response => {\n        dispatch({\n          type: types.GET_COUPONS_FROM_BASE,\n          payload: response.data\n        });\n      });\n  };\n}\n\nexport function getSoreLang() {\n  const response = EcwidApp.getPayload();\n  return {\n    type: types.GET_STORE_LANG,\n    payload: response.lang\n  };\n}\nexport function getCurency() {\n  return dispatch =>\n    axios(\n      `https://app.ecwid.com/api/v3/${storeId}/profile?token=${accessToken}`\n    ).then(value => {\n      return dispatch({\n        type: types.GET_CURRENCY,\n        payload: value.data.formatsAndUnits.currency\n      });\n    });\n}\n\nexport function generateCoupons(amount, pattern) {\n  return function(dispatch) {\n    axios\n      .post(\n        `https://app.ecwid.com/api/v3/${storeId}/discount_coupons?token=${accessToken}`,\n        {}\n      )\n      .then(response => {\n        dispatch({\n          type: types.GET_COUPONS_FROM_BASE,\n          payload: response\n        });\n      });\n  };\n}\n\nexport function openCopyModal() {\n  return {\n    type: types.OPEN_COPY_MODAL,\n    payload: true\n  };\n}\nexport function setActiveCoupon(obj) {\n  return {\n    type: types.SET_ACTIVE_COUPON,\n    payload: obj\n  };\n}\nexport function closeCopyModal() {\n  return {\n    type: types.CLOSE_COPY_MODAL,\n    payload: false\n  };\n}\n\nexport function setAppReady() {\n  return {\n    type: types.SET_APP_READY,\n    payload: true\n  };\n}\n","import { bindMethods, exportToCsv, openDataPage } from \"./service\";\n\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { connect } from \"react-redux\";\nimport { Parser } from \"json2csv\";\nimport { openCopyModal } from \"./actions/coupon-actions.js\";\nimport s from \"./styles/CouponManager/Aside.scss\";\nimport { Button } from \"antd\";\nimport * as R from \"ramda\";\n\nclass Aside extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      lang: \"\"\n    };\n    bindMethods(this, [\n      \"openModal\",\n      \"printCoupons\",\n      \"getActiveSetCoupons\",\n      \"getTranslate\"\n    ]);\n  }\n  componentDidMount() {\n    this.setState({ lang: this.props.storeLang });\n  }\n  componentWillReceiveProps() {\n    this.setState({ lang: this.props.storeLang });\n  }\n  openModal() {\n    this.props.openCopyModal();\n  }\n  printCoupons() {\n    const couponSet = this.getActiveSetCoupons();\n    const name = this.props.selectedCoupon.name;\n    openDataPage(couponSet, name);\n  }\n\n  downloadCsv = () => {\n    const data = this.getActiveSetCoupons();\n    const fields = [];\n    for (let key in data[0]) {\n      if (data[0].hasOwnProperty(key) && key.length > 0) {\n        fields.push(key);\n      }\n    }\n    try {\n      const json2csvParser = new Parser({ fields });\n      let result = json2csvParser.parse(data);\n      const filename = \"coupons.csv\";\n      if (!result.match(/^data:text\\/csv/i)) {\n        result = \"data:text/csv;charset=utf-8,\" + result;\n      }\n      result = encodeURI(result);\n      const link = document.createElement(\"a\");\n      link.setAttribute(\"href\", result);\n      link.setAttribute(\"download\", filename);\n      link.click();\n    } catch (err) {\n      console.error(err);\n    }\n  };\n  getActiveSetCoupons() {\n    const selectedCoupons = [];\n    this.props.coupons.forEach((el, key) => {\n      if (el.name === this.props.selectedCoupon.name) {\n        selectedCoupons.push(el);\n      }\n    });\n    return selectedCoupons;\n  }\n\n  getTranslate(item) {\n    const lang = {\n      en: {\n        title: \"Please select coupon you want to manage\",\n        copy: \"Copy coupon\",\n        print: \"Print coupon\",\n        downloadCsv: \"Download CSV\"\n      },\n      ru: {\n        title: \"Выберите купон\",\n        copy: \"Копировать купоны\",\n        print: \"Распечатать купоны\",\n        downloadCsv: \"Скачать CSV\"\n      }\n    };\n    let isActiveLangRussian = this.state.lang === \"ru\";\n    let useLang = isActiveLangRussian ? \"ru\" : \"en\";\n    return lang[useLang][item];\n  }\n  render() {\n    return (\n      <aside className={s.Aside} style={{ paddingTop: 100 }}>\n        <div style={{ padding: 10, background: \"#fff\" }}>\n          <h2>{this.getTranslate(\"title\")}</h2>\n          <div>\n            <Button\n              onClick={this.openModal}\n              disabled={R.isEmpty(this.props.selectedCoupon)}\n            >\n              {this.getTranslate(\"copy\")}\n            </Button>\n          </div>\n          <br />\n          <div>\n            <Button\n              onClick={this.printCoupons}\n              disabled={R.isEmpty(this.props.selectedCoupon)}\n            >\n              {this.getTranslate(\"print\")}\n            </Button>\n          </div>\n          <br />\n          <div>\n            <Button\n              onClick={this.downloadCsv}\n              disabled={R.isEmpty(this.props.selectedCoupon)}\n            >\n              {this.getTranslate(\"downloadCsv\")}\n            </Button>\n          </div>\n        </div>\n      </aside>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    modal: state.couponReducer.modal,\n    selectedCoupon: state.couponReducer.selectedCoupon,\n    coupons: state.couponReducer.coupons,\n    storeLang: state.couponReducer.storeLang\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { openCopyModal }\n)(Aside);\n","import React from \"react\";\nimport { Button } from \"antd\";\nimport { connect } from \"react-redux\";\nimport { setActiveCoupon, openCopyModal } from \"./actions/coupon-actions\";\n\nfunction CopyButton(props) {\n  return (\n    <Button\n      onClick={() => {\n        props.setActiveCoupon(props.coupon);\n        props.openCopyModal();\n      }}\n    >\n      {props.children}\n    </Button>\n  );\n}\n\nCopyButton.defaultProps = {\n  children: \"Copy\"\n};\n\nexport default connect(\n  null,\n  { setActiveCoupon, openCopyModal }\n)(CopyButton);\n","import { createFilter } from \"react-search-input\";\nimport {\n  getCouponsFromBase,\n  setAppReady,\n  setActiveCoupon\n} from \"./actions/coupon-actions.js\";\n\nimport React from \"react\";\nimport _ from \"lodash\";\nimport { bindMethods } from \"./service\";\nimport { connect } from \"react-redux\";\nimport { Table, Tag, Input, Button, Progress } from \"antd\";\nimport * as R from \"ramda\";\nimport moment from \"moment\";\nimport s from \"./styles/CouponManager/Main.scss\";\nimport CopyButton from \"./CopyButton\";\n\nconst KEYS_TO_FILTERS = [\"name\", \"status\", \"code\"];\nconst Search = Input.Search;\n\nfunction mapCouponStatus(status) {\n  switch (status) {\n    case \"ACTIVE\":\n      return \"active\";\n    case \"PAUSED\":\n      return \"paused\";\n    case \"EXPIRED\":\n      return \"expired\";\n    case \"USEDUP\":\n      return \"usedup\";\n    default:\n      return;\n  }\n}\n\nclass Main extends React.Component {\n  columns = [\n    {\n      title: \"Name\",\n      dataIndex: \"name\"\n    },\n    {\n      title: \"Discount Type\",\n      dataIndex: \"discountType\"\n    },\n    {\n      title: \"Time\",\n      dataIndex: \"id\",\n      render(text, record, index) {\n        if (!record.expirationDate) return \"until deactivated\";\n        return moment(record.expirationDate).format(\"MMM D YYYY\");\n      }\n    },\n    {\n      title: \"Status\",\n      dataIndex: \"status\",\n      render(_, { status }) {\n        return <span className={mapCouponStatus(status)}>{status}</span>;\n      }\n    },\n    {\n      title: \"Action\",\n      render: (_, row) => {\n        return <CopyButton coupon={row} />;\n      }\n    }\n  ];\n\n  constructor(props) {\n    super(props);\n    this.state = {\n      searchTerm: \"\"\n    };\n    bindMethods(this, [\n      \"makeCoupons\",\n      \"mekeCouponsGroups\",\n      \"componentDidMount\",\n      \"searchUpdated\",\n      \"getSearchPlaceholder\"\n    ]);\n\n    // this.throttle(\"resize\", \"optimizedResize\");\n  }\n  componentDidMount() {\n    this.props.getCouponsFromBase();\n    if (!this.props.aplication.ready) {\n      this.props.setAppReady();\n    }\n    // const update = this.forceUpdate;\n    // window.addEventListener(\"optimizedResize\", () => {\n    //   update();\n    // });\n  }\n  componentWillReceiveProps(props) {\n    if (!props.isCouponsLoaded) {\n      this.props.getCouponsFromBase(props.coupons.length);\n    }\n    if (props.isCouponsLoaded) {\n    }\n  }\n  throttle = (type, name, obj) => {\n    obj = obj || window;\n    var running = false;\n    var func = function() {\n      if (running) {\n        return;\n      }\n      running = true;\n      requestAnimationFrame(function() {\n        obj.dispatchEvent(new CustomEvent(name));\n        running = false;\n      });\n    };\n    obj.addEventListener(type, func);\n  };\n  mekeCouponsGroups(data) {\n    const sortByDate = (a, b) => {\n      const d1 = new Date(a.updateDate);\n      const d2 = new Date(b.updateDate);\n      return d2 - d1;\n    };\n    const couponGroupObj = {};\n    data.sort(sortByDate).forEach((obj, id) => {\n      if (!couponGroupObj[obj.name]) {\n        couponGroupObj[obj.name] = [];\n      }\n      couponGroupObj[obj.name].push(obj);\n    });\n    return couponGroupObj;\n  }\n  makeCoupons = couponsArray => {\n    if (_.isObject(couponsArray)) {\n      const { search } = this.state;\n\n      const couponsForTable = R.pipe(\n        R.groupBy(R.prop(\"name\")),\n        R.values,\n        R.filter(coupons => {\n          if (!search || search.length === 0) return true;\n          return R.any(k => {\n            return R.any(c => {\n              return _.includes(R.toLower(c[k]), R.toLower(search));\n            }, coupons);\n          }, KEYS_TO_FILTERS);\n        }),\n        R.map(coupons => {\n          return {\n            name: coupons[0].name,\n            discountType: coupons[0].discountType,\n            id: coupons[0].id,\n            status: coupons[0].status,\n            data: coupons\n          };\n        })\n      );\n\n      const rowSelection = {\n        selectedRowKeys: this.props.selectedCoupon.name,\n        type: \"radio\",\n        onChange: (selectedRowKeys, selectedRows) => {\n          this.props.setActiveCoupon(R.head(selectedRows));\n        }\n      };\n\n      return (\n        <Table\n          rowSelection={rowSelection}\n          rowKey={r => {\n            return r.name;\n          }}\n          scroll={{ x: true }}\n          loading={!this.props.isCouponsLoaded}\n          columns={this.columns}\n          dataSource={couponsForTable(couponsArray)}\n          size=\"small\"\n          expandedRowRender={record =>\n            record.data.map(el => (\n              <Tag color=\"blue\" key={el.code}>\n                {el.code}\n              </Tag>\n            ))\n          }\n          pagination={{\n            defaultPageSize: 30\n          }}\n          onRow={record => ({\n            onClick: () => {\n              this.props.setActiveCoupon(record);\n            }\n          })}\n        />\n      );\n    }\n  };\n  searchUpdated(term) {\n    this.setState({ searchTerm: term });\n  }\n  getSearchPlaceholder() {\n    return this.props.storeLang === \"ru\" ? \"Поиск\" : \"Search\";\n  }\n\n  renderProgress = () => {\n    const { isCouponsLoaded, total, coupons } = this.props;\n    return <Progress percent={Math.floor((coupons.length * 100) / total)} />;\n  };\n  render() {\n    const filteredCoupons = this.props.coupons.filter(\n      createFilter(this.state.searchTerm, KEYS_TO_FILTERS)\n    );\n    return (\n      <div>\n        <Search\n          placeholder={this.getSearchPlaceholder()}\n          onSearch={search => this.setState({ search })}\n          onChange={e => this.setState({ search: e.target.value })}\n          style={{ width: 300 }}\n        />\n        <br />\n        {this.renderProgress()}\n        <br />\n        {this.makeCoupons(filteredCoupons)}\n      </div>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    coupons: state.couponReducer.coupons,\n    aplication: state.couponReducer.aplication,\n    selectedCoupon: state.couponReducer.selectedCoupon,\n    isCouponsLoaded: state.couponReducer.isCouponsLoaded,\n    storeLang: state.couponReducer.storeLang,\n    total: state.couponReducer.total\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getCouponsFromBase, setAppReady, setActiveCoupon }\n)(Main);\n","import React from \"react\";\nimport { bindMethods } from \"./service\";\nimport { connect } from \"react-redux\";\nimport {\n  closeCopyModal,\n  generateCoupons,\n  getCouponsFromBase\n} from \"./actions/coupon-actions.js\";\nimport s from \"./styles/CouponManager/Popup.scss\";\nimport Chance from \"chance\";\nimport axios from \"axios\";\nimport { storeId, accessToken } from \"./ecwidConfig\";\nimport { Modal, Input, Form, Button, Checkbox, notification } from \"antd\";\nimport * as R from \"ramda\";\nconst chance = new Chance();\n\nclass CopyModal extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      show: true,\n      copyConfig: {\n        amount: 0,\n        prefix: \"myStore--\",\n        random: true,\n        valid: false\n      }\n    };\n    bindMethods(this, [\n      \"closeModal\",\n      \"handleChangeNumber\",\n      \"handleChangeprefix\",\n      \"handleChangeRandom\",\n      \"submitGenerator\",\n      \"getRandomCode\",\n      \"getTranslate\"\n    ]);\n  }\n  componentDidMount() {}\n  closeModal() {\n    this.props.closeCopyModal();\n  }\n  handleChangeNumber(event) {\n    const count =\n      Math.abs(event.target.value) < 50 ? Math.abs(event.target.value) : 50;\n    this.setState(s => {\n      s.copyConfig.amount = count;\n      return s;\n    });\n  }\n  handleChangeprefix(event) {\n    const value = event.target.value;\n    this.setState(s => {\n      s.copyConfig.prefix = value;\n      return s;\n    });\n  }\n  handleChangeRandom() {\n    this.setState(s => {\n      s.copyConfig.random = !s.copyConfig.random;\n      return s;\n    });\n  }\n  getRandomCode(length) {\n    return chance.hash({ length });\n  }\n  submitGenerator() {\n    if (\n      this.state.copyConfig.amount == 0 ||\n      this.state.copyConfig.prefix.length == 0\n    ) {\n      return alert(\"Please insert correct form data\");\n    }\n    let promises = [];\n    for (var i = 1; i <= this.state.copyConfig.amount; i++) {\n      let code = \"\";\n      if (this.state.copyConfig.random) {\n        code = this.getRandomCode(12);\n      } else {\n        code = `${this.state.copyConfig.prefix}-${this.getRandomCode(5)}`;\n      }\n      promises.push(\n        axios.post(\n          `https://app.ecwid.com/api/v3/${storeId}/discount_coupons?token=${accessToken}`,\n          { ...this.props.selectedCoupon, code }\n        )\n      );\n    }\n    notification.info({\n      message: `Copying ${promises.length} coupons`,\n      duration: 0\n    });\n\n    axios\n      .all(promises)\n      .then(() => {\n        notification.success({\n          message: `Finished copying coupons!`\n        });\n        setTimeout(() => document.location.reload(), 1000);\n      })\n      .then(result => {\n        this.props.getCouponsFromBase();\n      })\n      .then(this.closeModal())\n      .catch(error => console.error(error));\n  }\n  getTranslate(item) {\n    const lang = {\n      en: {\n        title: \"Choose the coupon code prefix and the number of codes\",\n        random: \"Random code:\",\n        prefix: \"Prefix:\",\n        amount: \"Amount:\",\n        button: \"Generate coupons\"\n      },\n      ru: {\n        title: \"Выберите префикс для кода и их количество\",\n        random: \"Случайный код:\",\n        prefix: \"Префикс:\",\n        amount: \"Количество:\",\n        button: \"Сгенерировать\"\n      }\n    };\n    let isActiveLangRussian = this.props.storeLang === \"ru\";\n    let useLang = isActiveLangRussian ? \"ru\" : \"en\";\n    return lang[useLang][item];\n  }\n  render() {\n    const formItemLayout = {\n      labelCol: {\n        xs: { span: 24 },\n        sm: { span: 4 }\n      },\n      wrapperCol: {\n        xs: { span: 24 },\n        sm: { span: 8 }\n      }\n    };\n    return (\n      <Modal\n        visible={this.props.modal.show}\n        onCancel={this.closeModal}\n        footer={null}\n      >\n        <div className={`${s.mainPopup} ${s.mainPopup_center}`}>\n          <div className={s.mainPopup__container}>\n            <h3 className={s.mainPopup__title}>{this.getTranslate(\"title\")}</h3>\n            <Form.Item\n              label={this.getTranslate(\"random\") + \" \"}\n              {...formItemLayout}\n            >\n              <Checkbox\n                checked={this.state.copyConfig.random}\n                onChange={this.handleChangeRandom}\n              />\n            </Form.Item>\n            {!this.state.copyConfig.random ? (\n              <Form.Item\n                label={this.getTranslate(\"prefix\")}\n                {...formItemLayout}\n              >\n                <Input\n                  type=\"string\"\n                  className=\"form-control input-medium\"\n                  placeholder=\"MyCoupon-$$$\"\n                  value={this.state.copyConfig.prefix}\n                  onChange={this.handleChangeprefix}\n                  disabled={this.state.copyConfig.random}\n                />\n              </Form.Item>\n            ) : (\n              \"\"\n            )}\n\n            <Form.Item label={this.getTranslate(\"amount\")} {...formItemLayout}>\n              <Input\n                type=\"number\"\n                className=\"form-control input-medium\"\n                placeholder=\"0\"\n                value={this.state.copyConfig.amount}\n                onChange={this.handleChangeNumber}\n                max=\"50\"\n              />\n            </Form.Item>\n            <div className={s.mainPopup__buttons}>\n              <Button\n                className=\"btn btn-primary btn-medium\"\n                onClick={this.submitGenerator}\n                disabled={R.isEmpty(this.props.selectedCoupon)}\n              >\n                {this.getTranslate(\"button\")}\n              </Button>\n            </div>\n          </div>\n        </div>\n      </Modal>\n    );\n  }\n}\nfunction mapStateToProps(state) {\n  return {\n    modal: state.couponReducer.modal,\n    selectedCoupon: state.couponReducer.selectedCoupon,\n    storeLang: state.couponReducer.storeLang\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { closeCopyModal, generateCoupons, getCouponsFromBase }\n)(CopyModal);\n","import React from \"react\";\nimport s from \"./styles/CouponManager/CouponManager.scss\";\nimport { bindMethods } from \"./service\";\nimport Aside from \"./aside.jsx\";\nimport Main from \"./main.jsx\";\nimport CopyModal from \"./copyModal.jsx\";\nimport { getSoreLang, getCurency } from \"./actions/coupon-actions.js\";\nimport { connect } from \"react-redux\";\nimport { Layout } from \"antd\";\n\nimport \"./App.sass\";\n\nconst { Header, Footer, Sider, Content } = Layout;\n\nclass App extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      data: \"\"\n    };\n    bindMethods(this, [\"getTranslate\"]);\n  }\n  componentDidMount() {\n    this.props.getSoreLang();\n    this.props.getCurency();\n  }\n  getTranslate(item) {\n    const lang = {\n      en: {\n        title: \"Coupon Manager\"\n      },\n      ru: {\n        title: \"Менеджер Купонов\"\n      }\n    };\n    let isActiveLangRussian = this.props.storeLang === \"ru\";\n    let useLang = isActiveLangRussian ? \"ru\" : \"en\";\n    return lang[useLang][item];\n  }\n  render() {\n    return (\n      <Layout style={{ minHeight: \"100vh\" }}>\n        <Content className=\"container\">\n          <h1>{this.getTranslate(\"title\")}</h1>\n          <div style={{ background: \"#fff\", padding: 24, minHeight: 380 }}>\n            <Main />\n          </div>\n        </Content>\n        <Sider theme=\"light\">\n          <Aside />\n          <CopyModal />\n        </Sider>\n      </Layout>\n    );\n  }\n}\n\nfunction mapStateToProps(state) {\n  return {\n    storeLang: state.couponReducer.storeLang\n  };\n}\nexport default connect(\n  mapStateToProps,\n  { getSoreLang, getCurency }\n)(App);\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read http://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit http://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See http://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from \"react\";\nimport ReactDOM from \"react-dom\";\nimport { Provider, connect } from \"react-redux\";\nimport store from \"./store\";\nimport App from \"./App.jsx\";\nimport \"./ecwidConfig\";\nimport * as serviceWorker from \"./serviceWorker\";\n\nclass CouponManager extends React.Component {\n  constructor(props) {\n    super(props);\n    this.state = {};\n  }\n  render() {\n    return (\n      <Provider store={store}>\n        <App />\n      </Provider>\n    );\n  }\n}\n\nReactDOM.render(<CouponManager />, document.getElementById(\"root\"));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: http://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}